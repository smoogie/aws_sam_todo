Resources:
  # S3 for files
  PublicDataS3Bucket:
    DependsOn: S3ThumbnailFunction
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: DataS3BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:*'
            Function:
              Fn::Sub: '${S3ThumbnailFunction.Arn}'
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: 'origin'
                  - Name: suffix
                    Value: '.jpg'
          - Event: 's3:ObjectCreated:*'
            Function:
              Fn::Sub: '${S3ThumbnailFunction.Arn}'
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: 'origin'
                  - Name: suffix
                    Value: '.png'
  LambdaInvokePermission:
    DependsOn:
      - S3ThumbnailFunction
      - PublicDataS3Bucket
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::Sub: '${S3ThumbnailFunction.Arn}'
      Action: 'lambda:InvokeFunction'
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: 'AWS::AccountId'
      SourceArn:
        Fn::Sub: '${PublicDataS3Bucket.Arn}'
  PublicDataS3BucketPolicy:
    DependsOn: PublicDataS3Bucket
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: PublicDataS3Bucket
      PolicyDocument:
        Statement:
          -
            Sid: GetPerm
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource:
              Fn::Sub: '${PublicDataS3Bucket.Arn}/*'