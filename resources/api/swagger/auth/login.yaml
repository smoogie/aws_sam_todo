definitions:
  LoginResponse:
    title: 'login response'
    type: object
    required:
      - access_token
      - refresh_token
      - token_validity
    properties:
      accepted:
        type: bool
paths:
  /auth/login:
    post:
      produces:
        - application/json
      responses:
        '200':
          description: 'A JSON with tokens'
          headers:
            Access-Control-Allow-Origin:
              type: string
          content:
            application/json:
              schema:
                $ref: '#/definitions/LoginResponse'
      parameters:
        - in: body
          name: 'user_credentials'
          schema:
            type: object
            required:
              - userName
              - password
            properties:
              userName:
                type: string
              password:
                type: string
      summary: 'login'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LoginFunction.Arn}/invocations'
        responses:
          default:
            statusCode: 200
        passthroughBehavior: when_no_templates
        requestTemplates:
          application/json: >
            #set($allParams = $input.params())
            {
            "bodyJson" : $input.json('$'),
            "params" : {
            #foreach($type in $allParams.keySet())
                #set($params = $allParams.get($type))
            "$type" : {
                #foreach($paramName in $params.keySet())
                "$paramName" : "$util.escapeJavaScript($params.get($paramName))"
                    #if($foreach.hasNext),#end
                #end
            }
                #if($foreach.hasNext),#end
            #end
            },
            "context" : {
                "cognitoIdentityId" : "$context.identity.cognitoIdentityId",
                "cognitoIdentityPoolId" : "$context.identity.cognitoIdentityPoolId"
                }
            }
        httpMethod: POST
        type: aws